data = midwest,
geom = "point")
qplot(popdensity,
percbelowpoverty,
data = midwest)
qplot(popdensity,
percbelowpoverty,
data = midwest,
facets = _inmetro)
qplot(popdensity,
percbelowpoverty,
data = midwest,
facets = ~inmetro)
View(midwest)
ob <- read.csv("obes_diab_trend.csv")
View(ob)
qplot(year, prevalence, data = ob, facets = ~condition)
qplot(year, prevalence, data = ob, color = ~condition)
qplot(year, prevalence, data = ob, color = condition)
qplot(year, prevalence, data = ob, geom = "line", color = condition)
```{r message=FALSE warning=FALSE}
```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(tidyverse)
library(nycflights13)
library(gapminder)
filter(flights, month==1 | month==2 | month==3 | month==4 | month==5)
View(gapminder)
new_gap <- filter(gapminder, country %in% c("Brazil", "India", "China"))
View(new_gap)
qplot(year, lifeExp, data = new_gap, geom = "line")
qplot(year, lifeExp, data = new_gap, geom = "line", color = country)
mean(c(1,2,3,NA,4,5), na.rm = TRUE)
starwars
View(starwars)
# starwars is a dataset known to have missing values
filter(starwars, is.na(hair_color))
# all characters with hair_color NA or "none"
filter(starwars, hair_color == "none" | is.na(hair_color))
View(flights)
# second parameter is the name of the new column
mutate(flights, in_flight_gain = dep_delay - arr_delay)
mutate(flights, air_time_hours = air_time/60)
mutate(flights, dist_prop_mean = distance/mean(distance))
# gapminder draw gdpPercap v. lifeExp for year 1952
gap52 <- filter(gapminder, year == 1952)
qplot(gdpPercap, lifeExp, data = gap52)
# gapminder draw gdpPercap v. lifeExp for year 1952
gap52 <- filter(gapminder, year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
qplot(log_gdp, lifeExp, data = gap52)
1 %>% sum(2,3)
gapnew <- gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap)) %>%
filter(continent = "Asia") %>%
mutate(tot_gdp = gdpPercap * pop)
gapnew <- gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap)) %>%
filter(continent == "Asia") %>%
mutate(tot_gdp = gdpPercap * pop)
library(gapminder)
gap <- gapminder %>%
filter(year == 2002 | year == 2007)
library(tidyverse)
gap <- gapminder %>%
filter(year == 2002 | year == 2007)
View(gap)
qplot(gdpPercap,
lifeExp,
data = gapminder)
qplot(gdpPercap,
lifeExp,
data = gap)
diabobes <- read.csv("obesity-diabetes.csv")
S_diab <- read.csv("S-obesity-diabetes.csv")
S_inc <- read.csv("ACS-south-2017.csv")
diabobes <- read.csv("obesity-diabetes.csv")
S_diab <- read.csv("S-obesity-diabetes.csv")
S_inc <- read.csv("ACS-south-2017.csv")
qplot(x = gdpPercap,
y = lifeExp,
data = gapminder,
facets = continent~year)
qplot(x = gdpPercap,
y = lifeExp,
data = gapminder,
size = I(0.5),
facets = continent~year)
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5) +
facet_grid(continent~year)
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5) +
facet_grid(continent~year, scales = "free")
ggplot()
ggplot() +
geom_point(mapping = aes(x = 799, y = 28.8))
ggplot() +
geom_point(mapping = aes(x = 799, y = 28.8)) +
geom_point(mapping = aes(x = 821, y = 30.3))
ggplot()+
geom_point(data = gapminder,
mapping = aes(x = depPercap, y = lifeExp))
ggplot()+
geom_point(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
ggplot()+
geom_point(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_smooth(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point() +
geom_smooth() +
xlab("New name for x-axis") +
ylab("New name for y-axis") +
theme_light()
##########################
# set working directory
# import dataset
# create raw dataset
##########################
# set working directory
setwd('~/Documents/GitHub/CompLegFall2019/data/uk_lower/raw_characteristics/')
setwd("~/GitHub/CompLegFall2019/data/uk_lower/raw_characteristics")
# read in dataset
files <- list.files(pattern="*.xml", full.names=TRUE, recursive=FALSE)
# to dataframe
committees <- xmlToList(xmlParse(files[1]))
library(XML)
# to dataframe
committees <- xmlToList(xmlParse(files[1]))
View(committees)
committees[[1]]
View(as.data.frame(committees))
# Set WD
setwd("~/GitHub/CompLegFall2019/data/uk_lower/Elections")
# Read downloaded data
elec <- read.csv("1918-2017election_results.csv")
# Function for capitalizing the first letter or each word
CapStr <- function(y) {
c <- strsplit(y, " ")[[1]]
paste(toupper(substring(c, 1, 1)), tolower(substring(c, 2)),
sep="", collapse=" ")
}
# Function to apply the previous function onto dataframe
capitalize_str <- function(charcter_string){
sapply(charcter_string, CapStr)
}
# Reformat constituency
ele <- elec %>%
mutate(Unconsted = as.numeric(total_votes<0)) %>%
mutate(constituency=replace(constituency,constituency ==constituency[15097], "Ynys Môn")) %>%
mutate(constituency_name = capitalize_str(constituency))
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "dplyr", "plyr", "tidyverse", "rvest", "zoo", "lubridate", "XML"), pkgTest)
# Set WD
setwd("~/GitHub/CompLegFall2019/data/uk_lower/Elections")
# Read downloaded data
elec <- read.csv("1918-2017election_results.csv")
# Function for capitalizing the first letter or each word
CapStr <- function(y) {
c <- strsplit(y, " ")[[1]]
paste(toupper(substring(c, 1, 1)), tolower(substring(c, 2)),
sep="", collapse=" ")
}
# Function to apply the previous function onto dataframe
capitalize_str <- function(charcter_string){
sapply(charcter_string, CapStr)
}
# Reformat constituency
ele <- elec %>%
mutate(Unconsted = as.numeric(total_votes<0)) %>%
mutate(constituency=replace(constituency,constituency ==constituency[15097], "Ynys Môn")) %>%
mutate(constituency_name = capitalize_str(constituency))
ele$total_votes[is.na(ele$turnout)] <- 0
ele$turnout[is.na(ele$turnout)] <- 0
# ele$constituency[15097] <- "Ynys Môn"
ele$constituency_id <- NULL
ele$X20 <- NULL
ele$constituency <- NULL
# Reformat constituency for better merge
term <- rbind(c("&","and"),c("And","and"),c("Of","of"))
for (i in 1:nrow(term)){
ele$constituency_name <- gsub(term[i,1],term[i,2], ele$constituency_name, perl = TRUE)
}
# Read constituency ID from previous dataset
cons <- uk_lower_constituencies %>%
select(constituency_name,constituency_path)
# Merge constituency ID
check <- merge(ele,cons,by = "constituency_name", all = T) %>%
distinct()
# Reformat constituency
ele <- elec %>%
mutate(Unconsted = as.numeric(total_votes<0)) %>%
mutate(constituency=replace(constituency,constituency ==constituency[15097], "Ynys Môn")) %>%
mutate(constituency_name = capitalize_str(constituency))
elec$constituency[15097]
# Reformat constituency
ele <- elec %>%
mutate(Unconsted = as.numeric(total_votes<0)) %>%
#mutate(constituency=replace(constituency,constituency ==constituency[15097], "Ynys Môn")) %>%
mutate(constituency_name = capitalize_str(constituency))
View(elec)
str(elec$constituency)
# Read downloaded data
elec <- read_csv("1918-2017election_results.csv")
# Function for capitalizing the first letter or each word
CapStr <- function(y) {
c <- strsplit(y, " ")[[1]]
paste(toupper(substring(c, 1, 1)), tolower(substring(c, 2)),
sep="", collapse=" ")
}
# Function to apply the previous function onto dataframe
capitalize_str <- function(charcter_string){
sapply(charcter_string, CapStr)
}
# Reformat constituency
ele <- elec %>%
mutate(Unconsted = as.numeric(total_votes<0)) %>%
#mutate(constituency=replace(constituency,constituency ==constituency[15097], "Ynys Môn")) %>%
mutate(constituency_name = capitalize_str(constituency))
ele$total_votes[is.na(ele$turnout)] <- 0
ele$turnout[is.na(ele$turnout)] <- 0
# ele$constituency[15097] <- "Ynys Môn"
ele$constituency_id <- NULL
ele$X20 <- NULL
ele$constituency <- NULL
# Reformat constituency for better merge
term <- rbind(c("&","and"),c("And","and"),c("Of","of"))
for (i in 1:nrow(term)){
ele$constituency_name <- gsub(term[i,1],term[i,2], ele$constituency_name, perl = TRUE)
}
# Read constituency ID from previous dataset
cons <- uk_lower_constituencies %>%
select(constituency_name,constituency_path)
# Read constituency ID from previous dataset
cons <- read_csv("../Constituencies/uk_lower_constituencies.csv") %>%
select(constituency_name,constituency_path)
# Merge constituency ID
check <- merge(ele,cons,by = "constituency_name", all = T) %>%
distinct()
View(check)
# Merge constituency ID
check <- merge(ele,cons,by = "constituency_name") %>%
distinct()
c <- ele %>% distinct()
# Merge constituency ID
check <- merge(ele,cons,by = "constituency_name", all = T) %>%
distinct()
sum(is.na(check$seats))
sum(is.na(check$constituency_path))
el <- check[!is.na(check$seats),]
View(el)
# Merge constituency ID
check <- merge(ele,cons,by = "constituency_name") %>%
distinct()
sum(is.na(check$constituency_path))
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct()
View(el)
View(elec)
sum(ele$con_votes[ele$con_votes<0])
sum(ele$con_votes[ele$con_votes<0],na.rm = T)
ele$con_votes[ele$con_votes<0]=0
str(ele)
sum(!is.na(ele$natSW_votes))
ele$natSW_votes[!is.na(ele$natSW_votes)]
str(elec)
# Read downloaded data
elec <- read.csv("1918-2017election_results.csv",stringsAsFactors = F)
str(elec)
# Reformat constituency
ele <- elec %>%
mutate(Unconsted = as.numeric(total_votes<0)) %>%
#mutate(constituency=replace(constituency,constituency ==constituency[15097], "Ynys Môn")) %>%
mutate(constituency_name = capitalize_str(constituency))
ele$constituency_id <- NULL
ele$X20 <- NULL
ele$constituency <- NULL
# Change negative votes of uncontested back into zero
ele$total_votes[is.na(ele$turnout)] <- 0
ele$turnout[is.na(ele$turnout)] <- 0
ele$con_votes[ele$con_votes<0] <- 0
# Reformat constituency for better merge
term <- rbind(c("&","and"),c("And","and"),c("Of","of"))
for (i in 1:nrow(term)){
ele$constituency_name <- gsub(term[i,1],term[i,2], ele$constituency_name, perl = TRUE)
}
# Read constituency ID from previous dataset
cons <- read_csv("../Constituencies/uk_lower_constituencies.csv") %>%
select(constituency_name,constituency_path)
# Read constituency ID from previous dataset
cons <- read.csv("../Constituencies/uk_lower_constituencies.csv", stringsAsFactors = F) %>%
select(constituency_name,constituency_path)
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct()
str(ele)
ele$X <- NULL
str(ele)
sum(ele$con_share<0)
sum(ele$con_share<0,na.rm = T)
sum(ele$lab_votes<0,na.rm = T)
sum(ele$natSW_votes<0,na.rm = T)
sum(ele$oth_votes<0,na.rm = T)
sum(ele$oth_shares<0,na.rm = T)
ele$lab_votes[ele$lab_votes<0] <- 0
ele$oth_votes[ele$oth_votes<0] <- 0
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct()
el$election[4]
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct() %>%
arrange(election)
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name", all = T) %>%
distinct()
sum(is.na(el$election))
e <- el[!is.na(el$election)&!is.na(el$constituency_path),]
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct()
View(e)
e$election[467]
View(ele)
e$election[217]
elec$election[217]
elec$election[6966]
e <- el[el$election!="",]
View(e)
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct() %>%
filter(election!="")
e <- el %>%
group_by(election) %>%
mutate(election_number = 1:nrow(election))
e <- el %>%
group_by(election) %>%
mutate(election_number = 1:nrows(election))
e <- el %>%
group_by(election) %>%
mutate(election_number = 1:length(election))
e <- el %>%
arrange(election)
e <- el %>%
arrange(election) %>%
group_by(election) %>%
mutate(election_number = 1:length(election))
e <- el %>%
arrange(election) %>%
group_by(election)
str(e)
nrow(e$election)
e <- el %>%
arrange(election) %>%
group_by(election) %>%
mutate(election_number = 1:row_number(election))
e <- el %>%
e <- el %>%
group_by(election) %>%
mutate(election_number = group_indices)
e <- el %>%
group_by(election) %>%
mutate(election_number = group_indices)
e <- el %>%
group_by(election) %>%
mutate(election_number = group_indices())
rlang::last_error()
group_indices()
el %>% group_by(election) %>% group_indices()
e <- el %>%
group_by(election) %>%
mutate(election_number = group_indices)
e <- el %>%
group_by(election) %>%
mutate(election_number = group_indices())
e <- el %>%
group_by(election) %>%
group_indices()
e <- el %>%
group_by(election) %>%
group_indices
mutate(number = group_indices())
e <- el %>%
group_by(election) %>%
mutate(number = group_indices())
e <- el %>%
group_by(election) %>%
dplyr::mutate(election_number = group_indices())
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct() %>%
filter(election!="")%>%
group_by(election) %>%
dplyr::mutate(election_number = group_indices())
View(cons)
cons <- read.csv("../Constituencies/uk_lower_constituencies.csv", stringsAsFactors = F)
View(cons)
# Read constituency ID from previous dataset
cons <- read.csv("../Constituencies/uk_lower_constituencies.csv", stringsAsFactors = F) %>%
select(constituency_name,constituency_path,constituency_number)
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct() %>%
filter(election!="")%>%
group_by(election) %>%
dplyr::mutate(election_number = group_indices())%>%
mutate(election_path = paste0("/election-",election_number,constituency_path)) %>%
arrange(election_number,constituency_number) %>%
mutate(observation_number = 1:length(election_number))
2>"1"
TRUE>0
TRUE>3
"apple">"bee"
"apple>1"
"abc">"bcd"
"b">"a"
"abc">2
"1a">3
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct() %>%
filter(election!="")%>%
group_by(election) %>%
dplyr::mutate(election_number = group_indices())%>%
mutate(election_path = paste0("/election-",election_number,constituency_path)) %>%
arrange(election_number,constituency_number) %>%
mutate(observation_number = 1:length(election_number)) %>%
mutate(observation_path = election_path)
e <- el %>%
select(observation_path, election_path, constituency_path,
observation_number, election_number, constituency_number,
election_year = election)
View(e)
# Read constituency ID from previous dataset
cons <- read.csv("../Constituencies/uk_lower_constituencies.csv", stringsAsFactors = F) %>%
select(constituency_name,constituency_path,constituency_number,parliament_path)
# Merge constituency ID
el <- merge(ele,cons,by = "constituency_name") %>%
distinct() %>%
filter(election!="")%>%
group_by(election) %>%
dplyr::mutate(election_number = group_indices())%>%
mutate(election_path = paste0("/election-",election_number,constituency_path)) %>%
arrange(election_number,constituency_number) %>%
mutate(observation_number = 1:length(election_number)) %>%
mutate(observation_path = election_path)
e <- el %>%
select(observation_path, election_path, constituency_path,
observation_number, election_number, constituency_number,
election_year = election,
constituency_name, constituency_ID = parliament_path)
e <- el %>%
select(observation_path, election_path, constituency_path,
observation_number, election_number, constituency_number,
election_year = election,
constituency_name, constituency_ID = parliament_path,
country_name = country.region, electorate, seats, unconsted,
con_votes, con_share, lib_votes, lib_share, lab_votes, lab_share, natSW_votes, natSW_share, oth_votes, oth_share,
total_votes, turnout)
e <- el %>%
select(observation_path, election_path, constituency_path,
observation_number, election_number, constituency_number,
election_year = election,
constituency_name, constituency_ID = parliament_path,
country_name = country.region, electorate, seats, uncontested,
con_votes, con_share, lib_votes, lib_share, lab_votes, lab_share, natSW_votes, natSW_share, oth_votes, oth_share,
total_votes, turnout)
e <- el %>%
select(observation_path, election_path, constituency_path,
observation_number, election_number, constituency_number,
election_year = election,
constituency_name, constituency_ID = parliament_path,
country_name = country.region, electorate, seats, Unconsted,
con_votes, con_share, lib_votes, lib_share, lab_votes, lab_share, natSW_votes, natSW_share, oth_votes, oth_share,
total_votes, turnout)
e <- el %>%
select(observation_path, election_path, constituency_path,
observation_number, election_number, constituency_number,
election_year = election,
constituency_name, constituency_ID = parliament_path,
country_name = country.region, electorate, seats, uncontested = Unconsted,
con_votes, con_share, lib_votes, lib_share, lab_votes, lab_share, natSW_votes, natSW_share, oth_votes, oth_share,
total_votes, turnout)
# Output
write.csv(e, "uk_lower_elections.csv")
