c$procedure[c$procedure] = 1
c$procedure[is.na(c$procedure)] = 0
c$other[is.na(c$other)] = 0
c$other[!is.na(c$other)] = 1
c$attack_defend[c$attack_defend=="attack"] = 1
c$attack_defend[c$attack_defend=="defend"] = 0
c$support_noSupport_missing[c$support_noSupport_missing=="support"] = 1
c$support_noSupport_missing[c$support_noSupport_missing=="no support"] = 0
c$support_noSupport_missing[c$support_noSupport_missing=="missing"] = NA
c$support_bill_or_policy[str_detect(c$support_bill_or_policy,"bill")] = 2
c$support_bill_or_policy[c$support_bill_or_policy=="policy"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="explicit"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="inferred"]=0
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="too far"]=2
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="not far enough"]=1
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="unsure"]=NA
c$tooFar_notFarEnough[str_detect(c$tooFar_notFarEnough,"just")]=0
c$explicit_inferred_tooFar[is.na(c$tooFar_notFarEnough)]=NA
c$explicit_inferred_tooFar[c$tooFar_notFarEnough==0]=NA
c$explicit_inferred_support[is.na(c$support_noSupport_missing)]=NA
c$explicit_inferred_support[c$support_noSupport_missing==0]=NA
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="inferred"]=0
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="explicit"]=1
c$valenceImprovement_nonDirectional[c$valenceImprovement_nonDirectional]=1
c$valenceImprovement_nonDirectional[is.na(c$valenceImprovement_nonDirectional)]=0
c$policy_ideology[c$policy_ideology]=1
c$policy_ideology[is.na(c$policy_ideology)]=0
c$support_noSupport_missing[c$support_noSupport=="support"] = 1
c$support_noSupport_missing[c$support_noSupport=="no support"] = 0
c$support_noSupport_missing[c$support_noSupport=="missing"] = NA
c$support_noSupport_missing[c$support_notSupport=="support"] = 1
c$support_noSupport_missing[c$support_notSupport=="no support"] = 0
c$support_noSupport_missing[c$support_notSupport=="missing"] = NA
c<-read.csv("jennifer_todo2_finished.csv",stringsAsFactors = F)
c$X<- NULL
c$policy_pork[c$policy_pork] = 1
c$policy_pork[is.na(c$policy_pork)] = 0
c$policy_ideology[c$policy_ideology] = 1
c$policy_ideology[is.na(c$policy_ideology)] = 0
c$procedure[c$procedure] = 1
c$procedure[is.na(c$procedure)] = 0
c$other[is.na(c$other)] = 0
c$other[!is.na(c$other)] = 1
c$attack_defend[c$attack_defend=="attack"] = 1
c$attack_defend[c$attack_defend=="defend"] = 0
c$support_notSupport[c$support_notSupport=="support"] = 1
c$support_notSupport[c$support_notSupport=="no support"] = 0
c$support_notSupport[c$support_notSupport=="missing"] = NA
c$support_bill_or_policy[str_detect(c$support_bill_or_policy,"bill")] = 2
c$support_bill_or_policy[c$support_bill_or_policy=="policy"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="explicit"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="inferred"]=0
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="too far"]=2
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="not far enough"]=1
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="unsure"]=NA
c$tooFar_notFarEnough[str_detect(c$tooFar_notFarEnough,"just")]=0
c$explicit_inferred_tooFar[is.na(c$tooFar_notFarEnough)]=NA
c$explicit_inferred_tooFar[c$tooFar_notFarEnough==0]=NA
c$explicit_inferred_support[is.na(c$support_noSupport_missing)]=NA
c$explicit_inferred_support[c$support_noSupport_missing==0]=NA
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="inferred"]=0
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="explicit"]=1
c$valenceImprovement_nonDirectional[c$valenceImprovement_nonDirectional]=1
c$valenceImprovement_nonDirectional[is.na(c$valenceImprovement_nonDirectional)]=0
c$policy_pork[c$policy_pork] = 1
c$policy_pork[is.na(c$policy_pork)] = 0
c$policy_ideology[c$policy_ideology] = 1
c$policy_ideology[is.na(c$policy_ideology)] = 0
c$procedure[c$procedure] = 1
c$procedure[is.na(c$procedure)] = 0
c$other[!is.na(c$other)] = 1
c$other[is.na(c$other)] = 0
c$attack_defend[c$attack_defend=="attack"] = 1
c$attack_defend[c$attack_defend=="defend"] = 0
c$support_notSupport[c$support_notSupport=="support"] = 1
c$support_notSupport[c$support_notSupport=="no support"] = 0
c$support_notSupport[c$support_notSupport=="missing"] = NA
c$support_bill_or_policy[str_detect(c$support_bill_or_policy,"bill")] = 2
c$support_bill_or_policy[c$support_bill_or_policy=="policy"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="explicit"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="inferred"]=0
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="too far"]=2
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="not far enough"]=1
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="unsure"]=NA
c$tooFar_notFarEnough[str_detect(c$tooFar_notFarEnough,"just")]=0
c$explicit_inferred_tooFar[is.na(c$tooFar_notFarEnough)]=NA
c$explicit_inferred_tooFar[c$tooFar_notFarEnough==0]=NA
c$explicit_inferred_support[is.na(c$support_noSupport_missing)]=NA
c$explicit_inferred_support[c$support_noSupport_missing==0]=NA
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="inferred"]=0
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="explicit"]=1
c$valenceImprovement_nonDirectional[c$valenceImprovement_nonDirectional]=1
c$valenceImprovement_nonDirectional[is.na(c$valenceImprovement_nonDirectional)]=0
c<-read.csv("jennifer_todo2_finished.csv",stringsAsFactors = F)
c$X<- NULL
c$policy_pork[c$policy_pork] = 1
c$policy_pork[is.na(c$policy_pork)] = 0
c$policy_ideology[c$policy_ideology] = 1
c$policy_ideology[is.na(c$policy_ideology)] = 0
c$procedure[c$procedure] = 1
c$procedure[is.na(c$procedure)] = 0
c$other[!is.na(c$other)] = 1
c$other[is.na(c$other)] = 0
c$attack_defend[c$attack_defend=="attack"] = 1
c$attack_defend[c$attack_defend=="defend"] = 0
c$support_notSupport[c$support_notSupport=="support"] = 1
c$support_notSupport[c$support_notSupport=="no support"] = 0
c$support_notSupport[c$support_notSupport=="missing"] = NA
c$support_bill_or_policy[str_detect(c$support_bill_or_policy,"bill")] = 2
c$support_bill_or_policy[c$support_bill_or_policy=="policy"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="explicit"] = 1
c$explicit_inferred_support[c$explicit_inferred_support=="inferred"]=0
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="too far"]=2
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="not far enough"]=1
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="unsure"]=NA
c$tooFar_notFarEnough[str_detect(c$tooFar_notFarEnough,"just")]=0
c$explicit_inferred_tooFar[is.na(c$tooFar_notFarEnough)]=NA
c$explicit_inferred_tooFar[c$tooFar_notFarEnough==0]=NA
c$explicit_inferred_support[is.na(c$support_noSupport_missing)]=NA
c$explicit_inferred_support[c$support_noSupport_missing==0]=NA
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="inferred"]=0
c$explicit_inferred_tooFar[c$explicit_inferred_tooFar=="explicit"]=1
c$valenceImprovement_nonDirectional[c$valenceImprovement_nonDirectional]=1
c$valenceImprovement_nonDirectional[is.na(c$valenceImprovement_nonDirectional)]=0
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="not enough"]=1
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="un-modified"]=0
c$tooFar_notFarEnough[c$tooFar_notFarEnough=="unsuree"]=0
c$explicit_inferred_support[c$explicit_inferred_support=="inferrred"]=0
write.csv(c,"jennifer_todo2_recoded.csv")
# set wd
setwd("~/GitHub/CompLegFall2019/data/us_upper_congress/Vote")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "dplyr", "plyr", "tidyverse", "rvest", "zoo", "lubridate", "XML"), pkgTest)
read_html("http://clerk.house.gov/evs/2005/index.asp")
read_html("http://clerk.house.gov/evs/2005/index.asp") %>%
html_node("tr:nth-child(2) td > a") %>%
html_text()
read_html("http://clerk.house.gov/evs/2006/index.asp") %>%
html_node("tr:nth-child(2) td > a") %>%
html_text()
read_html("http://clerk.house.gov/evs/2006/index.asp") %>%
html_node("tr:nth-child(2) td > a") %>%
html_attr()
read_html("http://clerk.house.gov/evs/2006/index.asp") %>%
html_node("tr:nth-child(2) td > a") %>%
html_text()
read_html("http://clerk.house.gov/evs/2006/index.asp") %>%
html_node("tr:nth-child(2) td > a")
read_html("http://clerk.house.gov/evs/2006/index.asp") %>%
html_node("tr:nth-child(2) td > a") %>%
html_attr("href")
download_xml("http://clerk.house.gov/cgi-bin/vote.asp?year=2006&rollnumber=543")
download.file("http://clerk.house.gov/cgi-bin/vote.asp?year=2006&rollnumber=543")
download_xml(http://clerk.house.gov/cgi-bin/vote.asp?year=2006&rollnumber=543)
xmlParse("http://clerk.house.gov/cgi-bin/vote.asp?year=2006&rollnumber=543")
View(xmlParse("http://clerk.house.gov/cgi-bin/vote.asp?year=2006&rollnumber=543"))
x <-xmlParse("http://clerk.house.gov/cgi-bin/vote.asp?year=2006&rollnumber=543")
x <-xmlParse("http://clerk.house.gov/evs/2006/roll543.xml")
read_xml("http://clerk.house.gov/evs/2006/roll543.xml")
x <- read_xml("http://clerk.house.gov/evs/2006/roll543.xml")
View(x)
xmlToDataFrame(x)
library(XML)
xmlToDataFrame(x)
xmlToList(x)
str(x)
unlist(x)
View(unlist(x))
download_xml("http://clerk.house.gov/evs/2006/roll543.xml")
read_xml("roll543.xml")
xy <- read_xml("http://clerk.house.gov/evs/2006/roll543.xml#Y")
View(xy)
View(x)
x[[1]]
x[[2]]
x[1]
x==xy
getNodeSet(x)
getNodeSet(x,"vote-data")
str(x)
View(x)
xmlParse("http://clerk.house.gov/evs/2006/roll543.xml#Y")
x1 <- xmlParse("http://clerk.house.gov/evs/2006/roll543.xml#Y")
View(x1)
read_html("http://clerk.house.gov/evs/2006/roll543.xml") %>%
html_node("table") %>%
html_table()
read_html("http://clerk.house.gov/evs/2006/roll543.xml") %>%
% html_node("table") %>%
html_table()
read_html("http://clerk.house.gov/evs/2006/roll543.xml") %>%
html_node("table") %>%
html_text()
read_html("http://clerk.house.gov/evs/2006/roll543.xml") %>%
html_node("td") %>%
html_text()
read_html("http://clerk.house.gov/evs/2006/roll543.xml")
View(xy)
View(x)
str(x)
x[1]
free(x)
free("http://clerk.house.gov/evs/2006/roll543.xml")
free(x[1])
free(x[[1]])
? free
str(x)
x[[1]]
free(<pointer: 0x000000001fa12880>)
free(x[[1]])
xmlTreeParse(x)
x1 <- xmlTreeParse(x)
View(x1)
str(x1)
xmlValue(x1)
xmlToDataFrame(x1)
Parsed.xy <- xmlTreeParse(xy)
str(Parsed.xy)
x1[[1]]
str(x1[[1]])
x1[[1]][[1]]
x1[[2]]
x1[[1]][[2]]
xmlToDataFrame(x1)
xmlToList(x1)
str(read_xml(x1))
str(read_xml(x1[[1]]))
saveXML(x1[[1]], file="output.xml")
saveXML(x[[1]], file="output.xml")
saveXML(x, file="output.xml")
str(x1)
str(x)
x[[1]]
class(x1.tree)
class(x1)
class(x)
xpathApply(x,'//el')
xmlValue(x1)
xmlValue(x1$doc$children$`rollcall-vote`)
xmlValue(x1$doc$children$`xml-stylesheet`)
xmlValue(Parsed.xy$doc$children$`rollcall-vote`)
text <- xmlValue(Parsed.xy$doc$children$`rollcall-vote`)
x1$doc$children$`rollcall-vote`
xmlToDataFrame(x1$doc$children$`rollcall-vote`)
xml_text(x)
xml_text(x1)
xmlRoot(x)
xmlRoot(x1)
trimws(xml_text(x1))
trimws(xml_text(x))
xmlToList(xmlParse(x))
x2 <- xmlToList(xmlParse(x))
View(x2)
x2[[1]]
x2[[2]]
unlist(x2)
str(unlist(x2))
str(x2[[2]])
x2[[1]]
str(unlist(x2[[2]]))
read_html("http://clerk.house.gov/evs/2006/index.asp") %>%
html_node("tr:nth-child(2) td > a") %>%
html_text() %>%
as.numeric()
year = 2005
year = 2006
roll_number = 543
link <- paste0("http://clerk.house.gov/evs/",year,"/roll",roll_number,".xml")
xmlToList(xmlParse(link))
length(x2[[2]])
size(x2[[2]])
length(x2)
lengths(x2)
x2[[2]]
x2[[2]][[1]]
str(x2[[2]][[1]])
x2[[2]][[1]][1]
x2[[2]][[1]][[1]]
x2[[2]][[1]][[1]]$.attrs
str(x2[[2]][[1]][[1]]$.attrs)
x2[[2]][[1]][[1]]$.attrs[1]
x2[[2]][[1]][[1]]$.attrs[2]
x2[[2]][[1]][[1]]$.attrs[4]
# xml file
link <- paste0("http://clerk.house.gov/evs/",year,"/roll",roll_number,".xml")
# parse xml file
genlist <- xmlToList(xmlParse(link))
View(genlist)
genlist[[1]][[1]]
genlist[[1]]
# Parse info
majority <- genlist[[1]][[1]] # majority party
congress <- genlist[[1]][[2]] # number of congress
session <- genlist[[1]][[3]] # session of congress, 1 or 2
genlist[[1]][[4]]
genlist[[1]][[5]]
genlist[[1]][[6]]
genlist[[1]][[7]]
genlist[[1]][[8]]
genlist[[1]][[9]]
genlist[[1]][[10]]
as.Date(genlistt[[1]][[10]])
as.Date(genlist[[1]][[10]])
as.Date("9-Dec-2006")
as.Date.character("9-Dec-2006")
as.Date("9/Dec/2006")
as.Date("9Dec2006")
as.Date("9-dec-2006")
as.Date("9-Dec-2006")
as.Date(genlist[[1]][[10]],format="%d-%b-%y")
genlist[[1]][[10]]
as.Date(genlist[[1]][[10]],format="%d-%b-%y")+2
as.Date(genlist[[1]][[10]],format="%d-%b-%y")
as.Date("9-Dec-2006",format="%d-%b-%y")
as.Date(genlist[[1]][[10]],format="%d-%b-%Y")
genlist[[1]][[11]]
genlist[[1]][[11]]$.attrs
genlist[[1]][[12]]
genlist[[1]][[13]]
genlist[[2]][[1]]
length(genlist[[2]])
lengths(genlist[[2]])
lengths(genlist)
lengths(genlist)[2]
genlist[[2]][[1]]
genlist[[2]][[1]]$legislator
genlist[[2]][[1]]$legislator$.attrs
str(genlist[[2]][[1]]$legislator$.attrs)
genlist[[2]][[1]]$legislator$.attrs[1]
genlist[[2]][[1]]$legislator
genlist[[2]][[1]]$legislator$.attrs[4]
genlist[[2]][[2]]
genlist[[2]][[2]]$vote
genlist[[2]][[1]]$vote
i = 1
# collect general data
majority <- genlist[[1]][[1]] # majority party
congress <- genlist[[1]][[2]] # number of congress
session <- genlist[[1]][[3]] # session of congress, 1st or 2nd
chamber <- 1 # change to 2 for senate, 1 is for house of rep
# roll_number is the index of roll call vote within each year
bill <- genlist[[1]][[6]] # bill number, i.e. S 3546
bill_title <- genlist[[1]][[12]]
vote_question <- genlist[[1]][[7]]
vote_type <- genlist[[1]][[8]]
vote_result <- genlist[[1]][[9]]
date <- as.Date(genlist[[1]][[10]],format="%d-%b-%Y")
last_name <- genlist[[2]][[i]]$legislator
party <- genlist[[2]][[i]]$legislator$.attrs[4]
state <- genlist[[2]][[i]]$legislator$.attrs[5]
role <- genlist[[2]][[i]]$legislator$.attrs[6]
vote <- genlist[[2]][[i]]$vote
ind_vote <- data.frame(year, roll_number, congress, session, chamber,
bill, bill_title, vote_question, vote_type, date,
last_name, party, state, role, vote,
majority, vote_result)
View(ind_vote)
genlist[[2]][[i]]$legislator$text
last_name <- genlist[[2]][[i]]$legislator$text
ind_vote <- data.frame(year, roll_number, congress, session, chamber,
bill, bill_title, vote_question, vote_type, date,
last_name, party, state, role, vote,
majority, vote_result)
str(ind_vote)
ind_vote <- data.frame(year, roll_number, congress, session, chamber,
bill, bill_title, vote_question, vote_type, date,
last_name, party, state, role, vote,
majority, vote_result, stringsAsFactors = F)
str(ind_vote)
# collect inddividual vote data
ind_vote_list <- list()
for (i in 1:(lengths(genlist)[2])) {
last_name <- genlist[[2]][[i]]$legislator$text
party <- genlist[[2]][[i]]$legislator$.attrs[4]
state <- genlist[[2]][[i]]$legislator$.attrs[5]
role <- genlist[[2]][[i]]$legislator$.attrs[6]
vote <- genlist[[2]][[i]]$vote
ind_vote <- data.frame(year, roll_number, congress, session, chamber,
bill, bill_title, vote_question, vote_type, date,
last_name, party, state, role, vote,
majority, vote_result, stringsAsFactors = F)
ind_vote_list[i] <- ind_vote
}
ind_roll <- do.call(rbind, ind_vote_list)
View(ind_roll)
View(ind_vote_list)
for (i in 1:(lengths(genlist)[2])) {
last_name <- genlist[[2]][[i]]$legislator$text
party <- genlist[[2]][[i]]$legislator$.attrs[4]
state <- genlist[[2]][[i]]$legislator$.attrs[5]
role <- genlist[[2]][[i]]$legislator$.attrs[6]
vote <- genlist[[2]][[i]]$vote
ind_vote <- data.frame(year, roll_number, congress, session, chamber,
bill, bill_title, vote_question, vote_type, date,
last_name, party, state, role, vote,
majority, vote_result, stringsAsFactors = F)
ind_vote_list[[i]] <- ind_vote
}
ind_roll <- do.call(rbind, ind_vote_list)
View(ind_roll)
genlist[[2]][[i14]]$legislator$text
genlist[[2]][[14]]$legislator$text
genlist[[2]][[15]]$legislator
setwd("~/GitHub/CompLegFall2019/data/us_upper_congress/Speech")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "dplyr", "plyr", "tidyverse", "rvest", "zoo", "lubridate", "XML"), pkgTest)
# read in data
# data source https://data.stanford.edu/congress_text#download-data
test <- read.delim("hein-daily/097_SpeakerMap.txt")
test <- read.delim("hein-daily/097_SpeakerMap.txt",header = TRUE, sep = "\t")
View(test)
test <- read.delim("hein-daily/097_SpeakerMap.txt",header = TRUE, sep = "\|")
test <- read.delim("hein-daily/097_SpeakerMap.txt",header = TRUE, sep = "|")
test <- read.delim("hein-daily/speeches_097.txt",header = TRUE, sep = "|")
# create an empty data frame for data storage
ind_year_list <- list()
# Collect votes
for (year in 1989:2020) {
# max amount of vote in each year
max <- read_html(paste0("http://clerk.house.gov/evs/",year,"/index.asp")) %>%
html_node("tr:nth-child(2) td > a") %>%
html_text() %>%
as.numeric()
ind_roll_list <- list()
for (roll_number in 1:max) {
# xml file
link <- paste0("http://clerk.house.gov/evs/",year,"/roll",roll_number,".xml")
# parse xml file
genlist <- xmlToList(xmlParse(link))
# collect general data
majority <- genlist[[1]][[1]] # majority party
congress <- genlist[[1]][[2]] # number of congress
session <- genlist[[1]][[3]] # session of congress, 1st or 2nd
chamber <- 1 # change to 2 for senate, 1 is for house of rep
# roll_number is the index of roll call vote within each year
bill <- genlist[[1]][[6]] # bill number, i.e. S 3546
bill_title <- genlist[[1]][[12]]
vote_question <- genlist[[1]][[7]]
vote_type <- genlist[[1]][[8]]
vote_result <- genlist[[1]][[9]]
date <- as.Date(genlist[[1]][[10]],format="%d-%b-%Y")
# collect inddividual vote data
ind_vote_list <- list()
for (i in 1:(lengths(genlist)[2])) {
last_name <- genlist[[2]][[i]]$legislator$text
party <- genlist[[2]][[i]]$legislator$.attrs[4]
state <- genlist[[2]][[i]]$legislator$.attrs[5]
role <- genlist[[2]][[i]]$legislator$.attrs[6]
vote <- genlist[[2]][[i]]$vote
ind_vote <- data.frame(year, roll_number, congress, session, chamber,
bill, bill_title, vote_question, vote_type, date,
last_name, party, state, role, vote,
majority, vote_result, stringsAsFactors = F)
ind_vote_list[[i]] <- ind_vote
}
# data frame of votes within each bill
ind_roll <- do.call(rbind, ind_vote_list)
ind_roll_list[[i]] <- ind_roll
}
# data frame of votes within each year
ind_year <- do.call(rbind,ind_roll_list)
ind_year_list[[i]] <- ind_year
}
test <- read.delim("hein-daily/speeches_097.txt",header = TRUE, sep = "|")
View(test)
descr <- read.delim("hein-daily/descr_097.txt",header = TRUE, sep = "|")
View(descr)
str(descr)
levels(descr$file)
SpeakerMap <- read.delim("hein-daily/097_SpeakerMap.txt",header = TRUE, sep = "|")
speeches <- read.delim("hein-daily/speeches_097.txt",header = TRUE, sep = "|")
View(SpeakerMap)
comb <- merge(SpeakerMap,descr)
View(comb)
comb <- merge(SpeakerMap,descr, by = "speech_id")
View(comb)
comb <- merge(SpeakerMap,descr, by = c("speech_id","chamber","state"))
comb <- merge(SpeakerMap,descr, by = "speech_id")
diff(comb$chamber.x,comb$chamber.y)
repeat(comb$chamber.x,comb$chamber.y)
